@using X.PagedList.Mvc.Core;

@{
    Layout = null;
    var items = ViewBag.attributes as X.PagedList.IPagedList<Asp.netApp.Areas.Admin.Models.DataModel.AttributeC>;
   // var items = ViewBag.categories as IEnumerable<Asp.netApp.Areas.Admin.Models.DataModel.Category>;

}
<h1>@ViewBag.flag</h1>
@inject IViewLocalizer _localizer;
<table id="example" class="table table-bordered dt-responsive nowrap table-striped align-middle" style="width:100%">
    <thead>
        <tr>
            <th scope="col" style="width: 10px;">
                <div class="form-check">
                    <input class="form-check-input fs-15" type="checkbox" id="checkAll" value="option">
                </div>
            </th>
            <th data-ordering="false">@_localizer["srno"]</th>
            <th data-ordering="false">@_localizer["code"]</th>
            <th data-ordering="false">@_localizer["name"]</th>
            <th>@_localizer["action"]</th>
        </tr>
    </thead>
    <tbody>

        @if (items != null)
        {
            @foreach (var at in items.Select((value, index) => new { value, index }))
            {

                <tr>
                    <th scope="row">
                        <div class="form-check">
                            <input class="form-check-input fs-15" type="checkbox" name="checkAll" value="option1">
                        </div>
                    </th>
                    <td> @(at.index + 1)</td>
                    <td>

                        @Html.DisplayFor(modelItem => at.value.AttributeCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => at.value.AttributeLanguages.ElementAt(0).AttributeName)
                     
                    </td>
                   

                    <td>
                        <div class="dropdown d-inline-block">
                            <button class="btn btn-soft-secondary btn-sm dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="ri-more-fill align-middle"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a asp-action="Index" asp-controller="AttributeOption" asp-route-attributeId="@at.value.AttributeId" class="dropdown-item"><i class="ri-settings-4-line"></i> Config</a></li>
                                <li><a asp-action="Details" asp-controller="Attribute" asp-route-id="@at.value.AttributeId" class="dropdown-item"><i class="ri-eye-fill align-bottom me-2 text-muted"></i> View</a></li>

                                <li><a asp-action="Edit" asp-controller="Attribute" asp-route-id="@at.value.AttributeId" class="dropdown-item edit-item-btn"><i class="ri-pencil-fill align-bottom me-2 text-muted"></i> Edit</a></li>

                                <li>
                                    <a class="dropdown-item remove-item-btn" asp-action="Delete" asp-controller="Attribute" asp-route-id="@at.value.AttributeId">
                                        <i class="ri-delete-bin-fill align-bottom me-2 text-muted"></i> Delete
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>



<ul class="pagination" style="justify-content:flex-end">
    @Html.PagedListPager(
            items,
            page => Url.Action("Index", "Attribute", new { page = page, s = ViewBag.s }),
            new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" }, // Add a class to the <ul> element

        LiElementClasses = new[] { "page-item" }, // Add a class to each <li> element
        PageClasses = new[] { "page-link" }, // Add a class to each page link
        DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always
    }
            )
</ul>